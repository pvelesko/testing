<?xml version="1.0" encoding="UTF-8"?>
<bag xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean" xmlns:exsl="http://exslt.org/common" xmlns:int="http://www.w3.org/2001/XMLSchema#int" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
 <internal xsl:version="1.0" exsl:keep_exsl_namespace="">
  <xsl:choose>
   <xsl:when test="exsl:ctx('targetOS')='MacOSX'">
    <name>%GpuProfilingHotspotsAtypePreviewName</name>
    <shortName>%GpuProfilingHotspotsAtypePreviewShortName</shortName>
   </xsl:when>
   <xsl:otherwise>
    <name>%GpuProfilingHotspotsAtypeName</name>
    <shortName>%GpuProfilingHotspotsAtypeShortName</shortName>
   </xsl:otherwise>
  </xsl:choose>
  <description>%GpuProfilingHotspotsAtypeDescription</description>
  <abbreviation>gp</abbreviation>
  <alias>gpu-profiling</alias>
  <int:schemaVersion>1</int:schemaVersion>
  <int:contentVersion>1</int:contentVersion>
  <property name="helpId">intel.phe.configs.gpu_inkernel_profiling</property>
 </internal>
 <prerequisites xsl:version="1.0" exsl:keep_exsl_namespace="" syntax="norules">
  <xsl:copy-of select="document('config://analysis_type/include/require_connection.xsl?connections=localhost,ssh')"/>
  <xsl:if test="exsl:ctx('targetOS')!='Windows' and exsl:ctx('targetOS')!='Linux' and exsl:ctx('targetOS')!='MacOSX'">
   <xsl:value-of select="exsl:error('%ThisAnalysisTypeIsNotApplicable')"/>
  </xsl:if>
 </prerequisites>
 <knobs xsl:version="1.0" exsl:keep_exsl_namespace="" syntax="norules">
  <xsl:variable name="knobsParams">
   <params isOpenCLCollectionVisible="false"/>
  </xsl:variable>
  <xsl:variable name="knobsParamsName">
   <xsl:text>config://analysis_type/include/knobs.xsl?</xsl:text>
   <xsl:for-each select="exsl:node-set($knobsParams)//@*">
    <xsl:value-of select="concat(name(), '=', .)"/>
    <xsl:text>&amp;</xsl:text>
   </xsl:for-each>
  </xsl:variable>
  <xsl:variable name="commonKnobs" select="document($knobsParamsName)"/>
  <xsl:copy-of select="$commonKnobs//knobs/booleanKnob[@id='gpuOpenCLCollection']"/>
  <enumKnob id="gpuProfilingModeAtk" displayName="%GpuProfilingMode" boolean:visible="true" cliName="gpu-profiling-mode">
   <description>%GpuProfilingModeDescription</description>
   <values>
    <value displayName="%GpuProfilingModeBBLatency">bblatency</value>
    <value displayName="%GpuProfilingModeMemLatency">memlatency</value>
    <value displayName="%GpuProfilingModeInsCount">inscount</value>
    <defaultValue>bblatency</defaultValue>
   </values>
  </enumKnob>
  <stringKnob id="kernelsToProfileAtk" displayName="%GpuProfilingKernels" cliName="kernels-to-profile">
   <description>%GpuProfilingKernelsDescription</description>
   <defaultValue/>
   <knobProperty name="knob_control_id">KernelGrid</knobProperty>
  </stringKnob>
 </knobs>
 <analysis xsl:version="1.0" exsl:keep_exsl_namespace="" syntax="norules">
  <xsl:choose>
   <xsl:when test="exsl:ctx('isGTPinCollectionAvailable', '') = 'ErrorNotSupported'">
    <xsl:value-of select="exsl:error('%GpuProfilingNotSupported')"/>
   </xsl:when>
   <xsl:when test="exsl:ctx('isGTPinCollectionAvailable', '') = 'ErrorUnsupportedHardware'">
    <xsl:value-of select="exsl:error('%GpuProfilingUnsupportedHardware')"/>
   </xsl:when>
   <xsl:when test="exsl:ctx('isGTPinCollectionAvailable', '') = 'ErrorUnknownStatus'">
    <xsl:value-of select="exsl:error('%GpuProfilingCannotBeConfigured')"/>
   </xsl:when>
   <xsl:when test="exsl:ctx('isGTPinCollectionAvailable', '') = 'Yes'"/>
  </xsl:choose>
  <xsl:if test="exsl:ctx('kernelsToProfileAtk', '') = ''">
   <xsl:value-of select="exsl:error('%GPUEmptyKernelName')"/>
  </xsl:if>
  <collector id="runsa">
   <collectorKnob knob="gpuProfilingMode">
    <xsl:value-of select="exsl:ctx('gpuProfilingModeAtk', '')"/>
   </collectorKnob>
   <collectorKnob knob="kernelsToProfile">
    <xsl:value-of select="exsl:ctx('kernelsToProfileAtk', '')"/>
   </collectorKnob>
   <collectorKnob knob="showInlinesByDefault">false</collectorKnob>
   <xsl:choose>
    <xsl:when test="exsl:ctx('targetOS')='MacOSX'">
     <collectorKnob knob="collectGpuMetal">true</collectorKnob>
    </xsl:when>
    <xsl:otherwise>
     <collectorKnob knob="collectGpuOpenCl">true</collectorKnob>
    </xsl:otherwise>
   </xsl:choose>
  </collector>
 </analysis>
</bag>
